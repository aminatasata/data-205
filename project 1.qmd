---
title: "Data 205 Project 1 "
author: "Aminata Sata Diatta"
format: html
editor: visual
---

## Introduction:

![](images/Screenshot%202025-02-23%20224445.png)

The data sets I chose contain details about crashes reported in Montgomery County. The first data set has over 100,000 entries with 39 columns, including both categorical and numerical variables. The second data set is similar but focuses only on non-motorists. I included non-motorists because, while drivers face risks, pedestrians and cyclists are also exposed to accidents. To better understand these two data sets, I decided to combine them. This combined data set will help answer key questions for my project.

## load the libraries and data sets

```{r}
library(tidyverse)
library(dplyr)
crash_rep <- read.csv("C:/Users/satad/Downloads/Crash_Reporting_-_Drivers_Data_20250318.csv")
non_motorists <- read.csv("C:/Users/satad/Downloads/Crash_Reporting_-_Non-Motorists_Data_20250318 (1).csv")
```

**I will start by modifying the name of the column to make my work more easier**.

```{r}
colnames(crash_rep)
colnames(non_motorists)

```

### Perform an inner join to combine the datasets on "Report.Number"

```{r}
combined_data <- inner_join(crash_rep, non_motorists, by = "Report.Number")
View(combined_data)
```

## Install packages, and load libraries

```{r}
install.packages("dplyr")
install.packages("ggplot2")
install.packages("stats")

# Load libraries
library(dplyr)
library(ggplot2)
library(stats)

```

## Rename my columns :

```{r}
rename_columns <- function(name) {
  name <- gsub("\\.", "_", name)  
  name <- gsub("_x$", "1", name)   
  name <- gsub("_y$", "2", name)   
  tolower(name)                    
  }
  colnames(combined_data) <- sapply(colnames(combined_data), rename_columns)

View(combined_data)
```

## **1- Is there a relationship between weather conditions and the likelihood of severe injury in a crash?**

```{r}
table(combined_data$weather1)
table(combined_data$injury_severity1)

```

## Remove majuscule

```{r}
combined_data$weather_clean <- tolower(combined_data$weather1)
combined_data$weather_clean <- trimws(combined_data$weather1)
# Apply both tolower and trimws CORRECTLY
combined_data$weather_clean <- tolower(trimws(combined_data$weather1))

# Now recode the values properly
combined_data$weather_clean <- dplyr::recode(combined_data$weather_clean,
  "clear" = "CLEAR",
  "cloudy" = "CLOUDY",
  "rain" = "RAIN",
  "raining" = "RAIN",
  "snow" = "SNOW",
  "blowing snow" = "SNOW",
  "fog, smog, smoke" = "FOG",
  "foggy" = "FOG",
  "severe winds" = "WIND",
  "freezing rain or freezing drizzle" = "FREEZING RAIN",
  "sleet" = "FREEZING RAIN",
  "wintry mix" = "FREEZING RAIN",
  "n/a" = NA_character_,
  "unknown" = NA_character_,
  .default = "Other"
)



```

## remove Na

```{r}

combined_data <- combined_data[!is.na(combined_data$weather_clean), ]
```

## modify injury type name 

```{r}
combined_data$injury_clean <- tolower(combined_data$injury_severity1)
combined_data$injury_clean <- trimws(combined_data$injury_clean)

combined_data$injury_clean <- dplyr::recode(combined_data$injury_clean,
  "no apparent injury" = "No Injury",
  "possible injury" = "Possible",
  "suspected minor injury" = "Minor",
  "suspected serious injury" = "Serious",
  .default = "Other"
)

```

```{r}
table(combined_data$weather_clean, combined_data$injury_clean)

```

# Create the bar plot that represent injury severity by wheather condition

```{r}
library(ggplot2)

# Reorder the injury severity levels
combined_data$injury_clean <- factor(combined_data$injury_clean, 
                                     levels = c("Serious", "Possible", "Other", "Minor", "No Injury"))

# Create the bar plot
ggplot(combined_data, aes(x = weather_clean, fill = injury_clean)) +
  geom_bar(position = "fill") +
  labs(
    title = "Injury Severity by Weather Condition",
    x = "Weather Condition",
    y = "Proportion",
    fill = "Injury Severity"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

## Analysis : 

The bar plot shows the relationship between weather conditions and injury severity in traffic accidents. Each bar represents a different weather condition, and the colors show the proportion of injury types. The pink color, which represents “No Injury,” dominates most weather conditions. Some weather types, like “WIND” and “FREEZING RAIN,” show more of the other colors, meaning more injuries. Overall, the graph helps us compare how often different types of injuries happen depending on the weather.

## Interpretation : 

Based on the bar plot, we can see that during windy weather, minor accidents happen. In addition, during fog, cloudy, and other weather conditions, possible injuries occur in crash accidents. More serious accidents happen during freezing rain. The type of injury is different depending on the weather condition. According to this result, weather is one of the factors that can influence crash accidents.

## 2- Do crashes that occur at night based light conditions result in more injuries ?

Before we do that, we will start to a binary column where 1 means that the injury was severe, and 0 when the injury is minor

```{r}
combined_data$injury_severity_binary <- ifelse(combined_data$injury_clean == "Serious", 1, 0)
table(combined_data$injury_clean)
```

### removing lowercase for light

```{r}
combined_data2 <- combined_data %>%
  mutate(light1 = tolower(light1))


```

### Create a heatmap for light conditions vs. injury severity

### let's start by renaming the element in our column. 

```{r}
heatmap_data <- combined_data2 %>%
  count(light1, injury_clean)

unique(combined_data2$light1)



```

```{r}
combined_data$light1_clean <- combined_data2$light1

combined_data$light1_clean <- recode(combined_data$light1_clean,
  "dark - unknown lighting" = "unknown",
  "dark - lighted" = "dark lights on",
  "dark -- unknown lighting" = "unknown" ,
  "dark - not lighted" = "dark no lights"
)

combined_data3 <- combined_data %>%
  filter(light1_clean != "n/a")

table(combined_data$light1_clean)


```

## Heatmap of Injury Severity by Light Condition

```{r}
heatmap_data <- combined_data3 %>%
  count(light1_clean, injury_clean)
ggplot(heatmap_data, aes(x = light1_clean, y = injury_clean, fill = n)) +
  geom_tile(color = "black") +
  scale_fill_gradient(low = "yellow", high = "red") +
  labs(
    title = "Heatmap of Injury Severity by Light Condition",
    x = "Light Condition",
    y = "Injury Severity",
    fill = "Count"
  ) +
  theme_dark() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))
```

## Analysis : 

The heatmap shows how injury severity in crash accidents is related to different light conditions. Each square shows the number of cases for a specific injury level and light condition, with colors from yellow to red. Most crashes with no injury happened during daylight, as shown by the bright red square. Minor, possible, and serious injuries also happened mostly during daylight, but with fewer cases (yellow squares).

## Interpretation:

This heatmap shows that most crashes happen in daylight, but injuries can still happen in all light conditions. This could mean that even though daylight gives better visibility, it does not completely prevent accidents or injuries. It may also mean that more people drive during the day, which leads to more crashes. Dark conditions still show injury cases, so driving at night still carries risk. The graph also shows that light condition is related to how often and how severe injuries are. In sum, light condition is one factor that can influence crash injuries.

## 3- Do you think wheather condition play a role in an accident involving non-motorists?

```{r}
table(combined_data$weather1)

```

## Rename my weather1 column 

```{r}
combined_data$weather1 <- tolower(trimws(combined_data$weather1))

combined_data$weather1_clean <- recode(combined_data$weather1,
  "clear" = "CLEAR",
  "cloudy" = "CLOUDY",
  "rain" = "RAIN",
  "raining" = "RAIN",
  "blowing snow" = "SNOW",
  "Snow" = "SNOW",
  "sleet" = "RAIN",
  "freezing rain or freezing drizzle" = "RAIN",
  "foggy" = "FOG",
  "fog, smog, smoke" = "FOG",
  "severe winds" = "WIND",
  "wintry mix" = "RAIN",
  .default = "OTHER")
table(combined_data$weather1_clean)

```

## let's check this table

```{r}
table(combined_data$related_non_motorist2, combined_data$weather1_clean)

```

### Representation of the number of accident related to non- motorists.

### let's load the libraries

## Note: to insert the picture, I asked chat gpt for help to insert the image

```{r}

non_motorist_weather <- combined_data %>%
  filter(!is.na(weather1_clean), !is.na(related_non_motorist2)) %>%
  group_by(weather1_clean) %>%
  summarise(count = n())

library(jpeg)
library(grid)

img <- readJPEG("C:/Users/satad/Pictures/Screenshots/car-accident-data205.jpg")
g <- rasterGrob(img, width = unit(1, "npc"), height = unit(1, "npc"), interpolate = TRUE)

```

## Represtion of a bar graph representing the number of accident that involves non-motorist based on weather condition 

```{r}
ggplot(non_motorist_weather, aes(x = weather1_clean, y = count)) +
  annotation_custom(g, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) +
  geom_col(fill = "darkred", alpha = 0.8) +
  labs(
    title = "Non-Motorist Accidents by Weather Condition",
    x = "Weather Condition",
    y = "Number of Accidents"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    panel.background = element_rect(fill = NA),
    plot.background = element_rect(fill = NA)
  )

```

## Analysis : 

The bar chart represent the number of non-motorist accidents under different weather conditions. The tallest bar is for clear weather, showing that the most non-motorist accidents happened when the weather was clear. rain, and cloudy conditions also had some non-motorist accidents but far fewer than in clear weather. fog, snow, wind, and others weather types had very low accident counts. Each bar represents the number of non-motorist accidents for each specific weather type.

## Interpretation : 

The chart suggests that clear weather does not prevent accidents involving non-motorists. In fact, more of these accidents happen during clear weather, possibly because more people are outside walking or biking when the weather is nice. Bad weather like fog, snow, and wind shows fewer non-motorist crashes, which may be because fewer people are outside in those conditions. This means that while dangerous weather can affect driving, non-motorist accidents are more common when the weather is good. Drivers should still be alert for pedestrians and bicyclists even when the weather is clear.

## let's do a chi-square test : 

```{r}
# Simplify to yes/no: was a non-motorist involved
combined_data$non_motorist_involved <- ifelse(!is.na(combined_data$related_non_motorist2), "Yes", "No")

weather_vs_non_motorist <- table(combined_data$weather1_clean, combined_data$non_motorist_involved)
chisq.test(weather_vs_non_motorist)

```

## Analysis : 

The Chi-square test was used to check the relationship between weather conditions and non-motorist involvement in crashes. The test returned a very high Chi-square value of 19912 with 6 degrees of freedom. The p-value was less than 2.2e-16, which will help us interpret the result.

## Interpretation : 

This result means there is a strong relationship between weather and whether a non-motorist was involved in an accident.(p\< 0.05)We can reject the idea that weather and non-motorist involvement are unrelated. For example, clear weather had the highest number of non-motorist accidents, likely because more people are outside. Even though accidents happen in all types of weather, this result shows the pattern is not random. Therefore, weather is an important factor to consider when studying traffic safety for non-motorists.

## Modify the name of non-motorist name

```{r}
combined_data$non_motorist_clean <- tolower(trimws(combined_data$related_non_motorist2))

combined_data$non_motorist_clean <- dplyr::recode(combined_data$non_motorist_clean,
  "pedestrian" = "PEDESTRIAN",
  "bicyclist" = "BICYCLIST",
  "cyclist (electric)" = "BICYCLIST",
  "cyclist (non-electric)" = "BICYCLIST",
  "scooter (electric)" = "SCOOTER",
  "scooter (non-electric)" = "SCOOTER",
  "wheelchair (electric)" = "WHEELCHAIR",
  "wheelchair (non-electric)" = "WHEELCHAIR",
  "machine operator/rider" = "WHEELCHAIR",
  "other" = "OTHER",
  .default = "OTHER"
)

```

### Bubble chart of non- motorist crash counts by weather condition

```{r}
dot_data <- combined_data %>%
  filter(!is.na(non_motorist_clean), !is.na(weather1_clean)) %>%
  group_by(non_motorist_clean, weather1_clean) %>%
  summarise(count = n(), .groups = "drop")
ggplot(dot_data, aes(x = weather1_clean, y = non_motorist_clean, size = count, fill = count)) +
  geom_point(alpha = 0.85, shape = 21, color = "black") + 
  scale_size_area(max_size = 18) +
  scale_fill_gradient(low = "beige", high = "orange") +  
  labs(
    title = "Non-Motorist Crashes by Weather Condition",
    x = "Weather Condition",
    y = "Non-Motorist Type",
    size = "Crash Count",
    fill = "Crash Count"
  ) +
  guides(size = "none")  
  theme_classic(base_size = 14) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_text(face = "bold", hjust = 0.5),
    panel.background = element_blank(),
    plot.background = element_blank(),
    panel.grid = element_blank(),
    axis.line = element_blank()
  )

```

## Analysis : 

The bubble plot visualizes non-motorist crash counts by weather condition and non-motorist type. The size and color intensity of the bubbles represent the volume of crashes, with larger and darker bubbles indicating higher crash frequencies. Pedestrians experienced the highest number of crashes, particularly during clear weather, followed by cloudy and rainy conditions. Bicyclist crashes were also notable in clear weather, while wheelchair and scooter-related crashes were minimal across all weather types.

## Interpretation:

\

This visualization suggests that clear weather is associated with the highest number of non-motorist crashes, which may be due to increased outdoor activity and road use. Pedestrians are the most vulnerable group, likely because they are more frequently present on roadways compared to other non-motorist types. The low number of crashes in poor weather like fog, snow, and wind could indicate reduced non-motorist presence or more cautious driving behaviors in such conditions. The data highlights the need for enhanced pedestrian safety measures, especially in favorable weather conditions when road use is higher.

## 4- How does the vehicle model affect the likelihood of a crash occuring under different speed limits ?

### let's see the type of car named

```{r}
unique(combined_data$vehicle_make)

```

## rename all the vehicle names:0

```{r}
combined_data$vehicle_make <- with(combined_data, case_when(
  vehicle_make %in% c("TOYOTA", "TOYOT", "TOY0TA", "TOYORA", "TOYTOA", "TOYO", "TOYT", "TOOT", "TOYOYA", "TTOYOTA", "TOY") ~ "TOYOTA",
  vehicle_make %in% c("CHEVROLET", "CHEV", "CHEVY", "CHEVEROLET", "CHEVROLETE", "CHEVORLET", "CEV") ~ "CHEVROLET",
  vehicle_make %in% c("FORD") ~ "FORD",
  vehicle_make %in% c("DODGE", "DODG", "DODG3") ~ "DODGE",
  vehicle_make %in% c("LEXUS", "LEXU", "LEXS", "LEXSUS", "LEX", "LEXIS") ~ "LEXUS",
  vehicle_make %in% c("HONDA", "HOND", "HONDAA", "IHON") ~ "HONDA",
  vehicle_make %in% c("HYUNDAI", "HYUN", "HYUNDA", "HYUANDAI", "HUYNDAI", "HYUNDIA", "HYUND", "HYNDAI", "HYUDAI", "HYUNDI") ~ "HYUNDAI",
  vehicle_make %in% c("NISSAN", "NISS", "NISSIAN", "MISSAN", "NSSAN") ~ "NISSAN",
  TRUE ~ "OTHER"
))


```

```{r}
unique(combined_data$vehicle_make)

```

## i will select the top 10 car , make sure than we are focussing on a speed limit above or equal to 25.

## Note to make my graph interactive , I get help by chatgpt. Chat gpt gave me the library to load , and ggplotly

```{r}
library(plotly)
top_makes <- combined_data %>%
  count(vehicle_make, sort = TRUE) %>%
  slice_head(n = 10) %>%
  pull(vehicle_make)

heatmap_data <- combined_data %>%
  filter(
    vehicle_make %in% top_makes,
    !is.na(speed_limit),
    !is.na(vehicle_year),
    speed_limit >= 25,
    vehicle_year <= 2025
  ) %>%
  group_by(vehicle_make, speed_limit) %>%
  summarise(
    count = n(),
    min_year = min(vehicle_year),
    max_year = max(vehicle_year),
    .groups = "drop"
  ) %>%
  mutate(
    year_range = paste0("Oldest: ", min_year, " | Newest: ", max_year)
  )

p <- ggplot(heatmap_data, aes(
  x = factor(speed_limit),
  y = vehicle_make,
  fill = count,
  text = paste("Speed Limit of the area:", speed_limit,
               "<br>Make:", vehicle_make,
               "<br>", year_range,
               "<br>Crash Count:", count)
)) +
  geom_tile(color = "white") +
  scale_fill_gradient(low = "lightblue", high = "darkblue") +
  labs(
    title = "Crashes by Vehicle Make and Speed Limit",
    x = "Speed Limit (MPH)",
    y = "Vehicle Make",
    fill = "Crash Count"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_text(hjust = 0.5)
  )

ggplotly(p, tooltip = "text")

```

## Analysis : 

The heatmap displays crash counts based on vehicle make and speed limit categories. Darker shades represent higher crash frequencies, with the darkest cells indicating counts close to 500. The "other" vehicle make category shows the highest crash counts, particularly in the 30 - 40 mph speed limit range. Toyota, Honda, and Nissan also have similar crash counts in this same speed range, while it decreases at higher speed limits.

## Interpretation : 

This heatmap reveals that the majority of vehicle crashes in Montgomery County happen at moderate speed limits, particularly between 30 and 40 mph, which aligns with typical speed zones in residential and commercial areas. The "other" category shows the highest number of crash incidents, possibly representing a wide range of less common or unlisted vehicle brands. Toyota, Honda, and Nissan also show notable crash involvement, which could reflect their high usage across the county. The reduced crash counts at higher speed limits may be due to fewer roads in the county allowing those speeds or more cautious driving behavior in such zones. The absence of crashes for certain makes at 50 -55 mph could indicate either limited exposure in those areas or a lack of reporting. These findings suggest that traffic safety efforts in Montgomery County should focus on mid-speed zones and common vehicle brands to effectively reduce crash risks.

### 5-Are there specific areas with a high concentration of crashes involved non-motorists ?

### let's see the type of non motorist we have here :

```{r}
unique(combined_data$related_non_motorist2)

```

### lat's rename them to nake it simple

```{r}

combined_data4 <- combined_data %>%
  mutate(
    related_non_motorist2 = recode(related_non_motorist2,
                                   "PEDESTRIAN" = "Pedestrian",
                                   "Pedestrian" = "Pedestrian",
                                   "BICYCLIST" = "Bicyclist",
                                   "Cyclist (non-electric)" = "Bicyclist",  
                                   "Cyclist (Electric)" = "Bicyclist",      
                                   "Scooter (electric)" = "Scooter",
                                   "Scooter (non-Electric)" = "Scooter",
                                   "Wheelchair (electric)" = "Wheelchair",
                                   "Wheelchair (non-electric)" = "Wheelchair",
                                   "Unknown Type Of Non-Motorist" = "Unknown",
                                   "Unknown" = "Unknown",
                                   "OTHER CONVEYANCE" = "Other",  
                                   "OTHER" = "Other",
                                   "MACHINE OPERATOR/RIDER" = "Other",  
                                   "IN ANIMAL-DRAWN VEH" = "Unknown",  
                                   "Other Pedestrian (person in a building, skater, personal conveyance, etc.)" = "Pedestrian",  
                                   "Other Pedestrian (person in a building, skater, personal conveyance, etc.), Pedestrian" = "Pedestrian",  
                                   "Other, PEDESTRIAN" = "Pedestrian",
                                   "OTHER, OTHER CONVEYANCE" = "Other",
                                   "BICYCLIST, OTHER" = "Bicyclist",
                                   "BICYCLIST, PEDESTRIAN" = "Bicyclist",
                                   "OTHER CONVEYANCE, PEDESTRIAN" = "Pedestrian",
                                   "Occupant of Motor Vehicle Not in Transport" = "Unknown", 
                                   "Occupant Of a Non-Motor Vehicle Transportation Device" = "Unknown",
                                   "Unknown, Wheelchair (electric)" = "Unknown",
                                   .default = "Other",
    )
  )

```

### What types of route do we have in this data set ?

```{r}
unique(combined_data4$route_type2)
```

```{r}
table(combined_data4$related_non_motorist2)

```

## second attempt cleaning : 

```{r}

combined_data5 <- combined_data4 %>%
  mutate(
    related_non_motorist2 = recode(related_non_motorist2,
      "Occupant of Motor Vehicle Not in Transport, Pedestrian" = "Pedestrian",
      "OTHER PEDALCYCLIST" = "Bicyclist",  
      "OTHER, PEDESTRIAN" = "Pedestrian",  
      "OTHER CONVEYANCE, PEDESTRIAN" = "Pedestrian", 
      "OTHER" = "Other", 
      "MACHINE OPERATOR/RIDER" = "Other", 
      "IN ANIMAL-DRAWN VEH" = "Unknown",  
      "Unknown Type Of Non-Motorist" = "Unknown",  
      "Unknown" = "Unknown",  
      "Scooter (electric)" = "Scooter",  
      "Scooter (non-Electric)" = "Scooter",  
      "Wheelchair (electric)" = "Wheelchair",  
      "Wheelchair (non-electric)" = "Wheelchair", 
      "Pedestrian" = "Pedestrian",  
      "BICYCLIST" = "Bicyclist",  
      "Cyclist (non-electric)" = "Bicyclist",  
      "Cyclist (Electric)" = "Bicyclist",  
      "BICYCLIST, OTHER" = "Bicyclist",  
      "BICYCLIST, PEDESTRIAN" = "Bicyclist" 
    )
  )


table(combined_data5$related_non_motorist2)

```

## Let's do the same for route_type

```{r}

combined_data6 <- combined_data5 %>%
  mutate(
    route_type2 = recode(route_type2,
                         "County" = "County",  # Keep County as it is
                         "Other Public Roadway" = "Public Roads",
                         "Maryland (State)" = "Maryland state",  
                         "US (State)" = "Maryland state",  
                         "Municipality" = "Public Roads",
                         "Ramp" = "Government", 
                         "Government" = "Government", 
                         "Interstate (State)" = "State Roads",
                         "Service Road" = "Public Roads",
                         "Maryland (State) Route" = "Maryland state",
                         "Private Route" = "Public Roads",  
                         "County Route" = "County",  
                         "Local Route" = "County",  
                         "Municipality Route" = "Public Roads",
                         "Bicycle Route" = "Bicycle Route", 
                         "Crossover" = "Bicycle Route",  
                         "Government Route" = "Government",  
                         "Spur" = "Unknown",  
                         "Private Roads" = "Public Roads",  
                         "Special Routes" = "Public Roads")
    )

```

```{r}
unique(combined_data6$route_type2)
```

```{r}
combined_data6 <- combined_data6 %>%
  mutate(route_type2 = recode(route_type2,
                              `""` = "Unknown",  # <- Fix for empty string
                              "County" = "County",
                              "Other Public Roadway" = "Public Roads",
                              "Maryland (State)" = "Maryland state",  
                              "US (State)" = "Maryland state",  
                              "Municipality" = "Public Roads",
                              "Ramp" = "Government", 
                              "Government" = "Government", 
                              "Interstate (State)" = "State Roads",
                              "Service Road" = "Public Roads",
                              "Maryland (State) Route" = "Maryland state",
                              "Private Route" = "Public Roads",  
                              "County Route" = "County",  
                              "Local Route" = "County",  
                              "Municipality Route" = "Public Roads",
                              "Bicycle Route" = "Bicycle Route", 
                              "Crossover" = "Bicycle Route",  
                              "Government Route" = "Government",  
                              "Spur" = "Public Roads",  
                              "Private Roads" = "Public Roads",  
                              "Special Routes" = "Public Roads"
  ))

```

```{r}
library(dplyr)
library(ggplot2)

# Step 1: Filter data with valid route type and non-motorist info
non_motorist_data <- combined_data6 %>%
  filter(!is.na(route_type2), route_type2 != "", 
         !is.na(related_non_motorist2), related_non_motorist2 != "")

# Step 2: Count by route type and non-motorist type
route_type_counts <- non_motorist_data %>%
  count(route_type2, related_non_motorist2)

# Step 3: Reorder so the route types with most crashes appear at the bottom
route_type_totals <- route_type_counts %>%
  group_by(route_type2) %>%
  summarise(total = sum(n)) %>%
  arrange(desc(total))  # Descending order for highest at bottom

# Merge and reorder factor levels
route_type_counts <- route_type_counts %>%
  left_join(route_type_totals, by = "route_type2") %>%
  mutate(route_type2 = factor(route_type2, levels = route_type_totals$route_type2))

# Step 4: Plot
ggplot(route_type_counts, aes(x = n, y = route_type2, fill = related_non_motorist2)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Non-Motorist Crash Count by Route Type",
    x = "Crash Count",
    y = "Route Type",
    fill = "Non-Motorist Type"
  ) +
  theme_minimal()

```

## Analysis : 

This bar chart presents the total number of non-motorist crashes by route type in Montgomery County, . County and Maryland state roads present for the highest crash counts, followed by public roads and government roads. Pedestrians make up the largest portion of non-motorist crashes across most route types, especially on county and state roads. Bicyclists also experience a substantial number of crashes, particularly on county routes.

## Interpretation : 

According to the graph, the non-motorist crashes are most prevalent on county and Maryland state roads in Montgomery County, likely due to higher traffic volumes and pedestrian activity in those areas. Pedestrians are the most frequently affected group, indicating a need for improved pedestrian safety infrastructure and enforcement. Bicyclist-related crashes are also common on these same roads, which may reflect insufficient bike lanes or road-sharing measures. The low crash counts on state roads, bicycle routes, and government roads could indicate fewer non-motorist users or better safety designs. Overall, these patterns highlight the importance of targeted safety interventions on county and state-maintained roads to reduce crash risks for pedestrians and bicyclists.

## 6- **How does the presence of alcohol or drugs affect crash severity for drivers ?**

```{r}
unique(combined_data$driver_substance_abuse2)
```

## Recode into two categories: 2 = substance use, 1 = none substance use 

```{r}
combined_data$substance_use_category <- ifelse(
  combined_data$driver_substance_abuse2 %in% c(
    "ALCOHOL PRESENT", 
    "ALCOHOL CONTRIBUTED", 
    "ILLEGAL DRUG PRESENT", 
    "ILLEGAL DRUG CONTRIBUTED", 
    "COMBINED SUBSTANCE PRESENT", 
    "MEDICATION PRESENT", 
    "ALCOHOL PRESENT, NONE DETECTED", 
    "ALCOHOL CONTRIBUTED, NONE DETECTED", 
    "COMBINED SUBSTANCE PRESENT, NONE DETECTED", 
    "MEDICATION PRESENT, NONE DETECTED"
  ), 
  2,
  1)
```

## Let's take a look at the new table

```{r}
table(combined_data$substance_use_category)

head(combined_data[, c("driver_substance_abuse2", "substance_use_category")])

```

```{r}
unique(combined_data$injury_severity1)

```

### Consider 1 as a serious injury ,  and 0 as no injury

```{r}
combined_data$severe_injury <- ifelse(
  combined_data$injury_severity1 %in% c(
    "SUSPECTED SERIOUS INJURY", 
    "Suspected Serious Injury", 
    "POSSIBLE INJURY", 
    "Possible Injury"
  ),
  1,  
  0 
)

```

```{r}
table(combined_data$injury_severity1, combined_data$severe_injury)

```

## 2\*2 table

```{r}
table_data <- table(combined_data$substance_use_category, combined_data$severe_injury)
table_data

```

## Calculate the odds ratio: 

```{r}
odds_ratio <- (8 / 80) / (148 / 5824)
odds_ratio

```

**7- Are we able to locate accidents that involve non-motorists from the map?**

```{r}
library(leaflet)
# Create a leaflet map
map <- leaflet(data = combined_data) %>%
  addProviderTiles("CartoDB.Positron") %>%  # You can change the style here (e.g., "CartoDB.Positron", "Stamen.Toner", etc.)
  addMarkers(
    ~longitude1, ~latitude1,  # Longitude and Latitude from your data
    popup = ~road_name1,      # Road name will show in popup on hover
    label = ~road_name1,      # Label will also show on hover
    clusterOptions = markerClusterOptions()  # Cluster the markers for better visibility
  ) %>%
  setView(lng = mean(combined_data$longitude1), lat = mean(combined_data$latitude1), zoom = 10)  # Center the map

# Show the map
map

```

## 
