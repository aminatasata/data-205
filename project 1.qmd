---
title: "Data 205 Project 1 "
author: "Aminata Sata Diatta"
format: html
editor: visual
---

## Introduction:

![](images/Screenshot%202025-02-23%20224445.png)

The data sets I chose contain details about crashes reported in Montgomery County. The first data set has over 100,000 entries with 39 columns, including both categorical and numerical variables. The second data set is similar but focuses only on non-motorists. I included non-motorists because, while drivers face risks, pedestrians and cyclists are also exposed to accidents. To better understand these two data sets, I decided to combine them. This combined data set will help answer key questions for my project.

## load the libraries and data sets

```{r}
library(tidyverse)
library(dplyr)
crash_rep <- read.csv("C:/Users/satad/Downloads/Crash_Reporting_-_Drivers_Data_20250318.csv")
non_motorists <- read.csv("C:/Users/satad/Downloads/Crash_Reporting_-_Non-Motorists_Data_20250318 (1).csv")
```

**I will start by modifying the name of the column to make my work more easier**.

```{r}
colnames(crash_rep)
colnames(non_motorists)

```

### Perform an inner join to combine the datasets on "Report.Number"

```{r}
combined_data <- inner_join(crash_rep, non_motorists, by = "Report.Number")
View(combined_data)
```

## Install packages, and load libraries

```{r}
install.packages("dplyr")
install.packages("ggplot2")
install.packages("stats")

# Load libraries
library(dplyr)
library(ggplot2)
library(stats)

```

## Rename my columns :

```{r}
rename_columns <- function(name) {
  name <- gsub("\\.", "_", name)  
  name <- gsub("_x$", "1", name)   
  name <- gsub("_y$", "2", name)   
  tolower(name)                    
  }
  colnames(combined_data) <- sapply(colnames(combined_data), rename_columns)

View(combined_data)
```

## **1- Is there a relationship between weather conditions and  injury in a crash?**

```{r}
table(combined_data$weather1)
table(combined_data$injury_severity1)

```

## Remove majuscule

```{r}
combined_data$weather_clean <- tolower(combined_data$weather1)
combined_data$weather_clean <- trimws(combined_data$weather1)
# Apply both tolower and trimws CORRECTLY
combined_data$weather_clean <- tolower(trimws(combined_data$weather1))

# Now recode the values properly
combined_data$weather_clean <- dplyr::recode(combined_data$weather_clean,
  "clear" = "CLEAR",
  "cloudy" = "CLOUDY",
  "rain" = "RAIN",
  "raining" = "RAIN",
  "snow" = "SNOW",
  "blowing snow" = "SNOW",
  "fog, smog, smoke" = "FOG",
  "foggy" = "FOG",
  "severe winds" = "WIND",
  "freezing rain or freezing drizzle" = "FREEZING RAIN",
  "sleet" = "FREEZING RAIN",
  "wintry mix" = "FREEZING RAIN",
  "n/a" = NA_character_,
  "unknown" = NA_character_,
  .default = "Other"
)



```

## remove Na

```{r}

combined_data <- combined_data[!is.na(combined_data$weather_clean), ]
```

## modify injury type name

```{r}
combined_data$injury_clean <- tolower(combined_data$injury_severity1)
combined_data$injury_clean <- trimws(combined_data$injury_clean)

combined_data$injury_clean <- dplyr::recode(combined_data$injury_clean,
  "no apparent injury" = "No Injury",
  "possible injury" = "Possible",
  "suspected minor injury" = "Minor",
  "suspected serious injury" = "Serious",
  .default = "Other"
)

```

```{r}
table(combined_data$weather_clean, combined_data$injury_clean)

```

## Proportion and percentage of injury

```{r}
# Get proportions in the specified order
injury_props <- prop.table(table(combined_data$injury_clean))

# Convert to data frame for better display or plotting
injury_df <- as.data.frame(injury_props)

# rename columns for clarity
colnames(injury_df) <- c("Injury_Severity", "Proportion")

# Multiply proportions by 100 to get percentages
injury_df$Percentage <- round(injury_df$Proportion * 100, 2)

# Print the result
print(injury_df)

```

# Create the bar plot that represent injury severity by wheather condition

```{r}

# Reorder the injury severity levels
combined_data$injury_clean <- factor(combined_data$injury_clean, 
                                     levels = c("Serious", "Possible", "Other", "Minor", "No Injury"))

# Create the bar plot
ggplot(combined_data, aes(x = weather_clean, fill = injury_clean)) +
  geom_bar(position = "fill") +
  labs(
    title = "Injury Severity by Weather Condition",
    x = "Weather Condition",
    y = "Proportion",
    fill = "Injury Severity"
  ) +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

## Analysis :

The bar plot shows the relationship between weather conditions and injury severity in traffic accidents. Each bar represents a different weather condition, and the colors show the proportion of injury types. The pink color, which represents “No Injury,” dominates most weather conditions. Some weather types, like “WIND” and “FREEZING RAIN,” show more of the other colors, meaning more injuries. Overall, the graph helps us compare how often different types of injuries happen depending on the weather.

## Interpretation :

Based on the bar plot, we can see that during windy weather, minor accidents happen. In addition, during fog, cloudy, and other weather conditions, possible injuries occur in crash accidents. More serious accidents happen during freezing rain. The type of injury is different depending on the weather condition. According to this result, weather is one of the factors that can influence crash accidents.

## 2- light vs injury severity

Before we do that, we will start to a binary column where 1 means that the injury was severe, and 0 when the injury is minor

```{r}
combined_data$injury_severity_binary <- ifelse(combined_data$injury_clean == "Serious", 1, 0)
table(combined_data$injury_clean)

```

```{r}
injury_percentages <- combined_data %>%
  count(injury_clean) %>%
  mutate(percentage = (n / sum(n)) * 100)

# Create bar chart
ggplot(injury_percentages, aes(x = injury_clean, y = percentage, fill = injury_clean)) +
  geom_bar(stat = "identity") +
  labs(title = "Injury Severity Distribution",
       x = "Injury Category",
       y = "Percentage (%)") +
  theme_minimal() +
  theme(
    legend.position = "none",
    panel.grid.major = element_blank(),  
    panel.grid.minor = element_blank(), 
    panel.background = element_blank(),  
    plot.background = element_blank()  ) +
  geom_text(aes(label = sprintf("%.2f%%", percentage)), vjust = -0.5)
```

## Analysis : 

The graph above shows the percentage of different injury levels. After doing the inner join, we can see that 94% of the accidents resulted in "No injury," while only 0.30% were serious. These percentages will help explain the results we find later and give us a sense of how the data is distributed.

### removing lowercase for light

```{r}
combined_data2 <- combined_data %>%
  mutate(light1 = tolower(light1))


```

### Create a heatmap for light conditions vs. injury severity

### let's start by renaming the element in our column.

```{r}
heatmap_data <- combined_data2 %>%
  count(light1, injury_clean)

unique(combined_data2$light1)



```

```{r}
combined_data$light1_clean <- combined_data2$light1

combined_data$light1_clean <- recode(combined_data$light1_clean,
  "dark - unknown lighting" = "unknown",
  "dark - lighted" = "dark lights on",
  "dark -- unknown lighting" = "unknown" ,
  "dark - not lighted" = "dark no lights"
)

combined_data3 <- combined_data %>%
  filter(light1_clean != "n/a")

table(combined_data$light1_clean)


```

## Heatmap of Injury Severity by Light Condition

```{r}
heatmap_data_norm <- combined_data3 %>%
  count(light1_clean, injury_clean) %>%
  group_by(light1_clean) %>%
  mutate(prop = n / sum(n)) %>%
  ungroup()

ggplot(heatmap_data_norm, aes(x = light1_clean, y = injury_clean, fill = prop)) +
  geom_tile(color = "black") +
  scale_fill_gradient(low = "yellow", high = "red") +
  labs(
    title = "Heatmap of Injury Severity by Light Condition",
    x = "Light Condition",
    y = "Injury Severity",
    fill = "Proportion"
  ) +
  theme(
    panel.grid.major = element_blank(),  
    panel.grid.minor = element_blank(), 
    panel.background = element_blank(),  
    plot.background = element_blank(),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

```

## Analysis :

The heatmap titled "Heatmap of Injury Severity by Light Condition" illustrates the proportion of injury severities under various lighting conditions during accidents. The x-axis represents different light conditions ( daylight, dark with no lights, dusk), while the y-axis indicates injury severity levels ranging from "No Injury" to "Serious." The colors range from yellow (low proportion) to red (high proportion), with red signifying a higher percentage of cases. A notable pattern is that the "No Injury" row consistently shows the darkest red across nearly all light conditions, indicating that the majority of incidents reported resulted in no injuries, regardless of lighting. Meanwhile, all other injury categories, such as "Minor," "Possible," or "Serious," show much lower proportions (mostly yellow), suggesting they are less common.

## Interpretation:

Given that "No Injury" dominates the dataset, the heatmap primarily highlights how low the frequency of injuries is across all light conditions, rather than identifying conditions that are more dangerous. This imbalance in the dataset can mask smaller trends in actual injury rates. For instance, although it IS possible that poor lighting (like “dark-no lights”) may contribute to more severe injuries, the heatmap cannot clearly show that due to the overwhelming presence of non-injury cases.

## 3- Do you think wheather condition play a role in an accident involving non-motorists?

```{r}
table(combined_data$weather1)

```

## Rename my weather1 column

```{r}
combined_data$weather1 <- tolower(trimws(combined_data$weather1))

combined_data$weather1_clean <- recode(combined_data$weather1,
  "clear" = "CLEAR",
  "cloudy" = "CLOUDY",
  "rain" = "RAIN",
  "raining" = "RAIN",
  "blowing snow" = "SNOW",
  "Snow" = "SNOW",
  "sleet" = "RAIN",
  "freezing rain or freezing drizzle" = "RAIN",
  "foggy" = "FOG",
  "fog, smog, smoke" = "FOG",
  "severe winds" = "WIND",
  "wintry mix" = "RAIN",
  .default = "OTHER")
table(combined_data$weather1_clean)

```

## let's check this table

```{r}
table(combined_data$related_non_motorist2, combined_data$weather1_clean)

```

### Representation of the number of accident related to non- motorists.

### let's load the libraries

## Note: to insert the picture, I asked chat gpt for help to insert the image

```{r}

non_motorist_weather <- combined_data %>%
  filter(!is.na(weather1_clean), !is.na(related_non_motorist2)) %>%
  group_by(weather1_clean) %>%
  summarise(count = n())

library(jpeg)
library(grid)

img <- readJPEG("C:/Users/satad/Pictures/Screenshots/car-accident-data205.jpg")
g <- rasterGrob(img, width = unit(1, "npc"), height = unit(1, "npc"), interpolate = TRUE)

```

## Represtion of a bar graph representing the number of accident that involves non-motorist based on weather condition

```{r}
ggplot(non_motorist_weather, aes(x = weather1_clean, y = count)) +
  annotation_custom(g, xmin = -Inf, xmax = Inf, ymin = -Inf, ymax = Inf) +
  geom_col(fill = "darkred", alpha = 0.8) +
  labs(
    title = "Non-Motorist Accidents by Weather Condition",
    x = "Weather Condition",
    y = "Number of Accidents"
  ) +
  theme_minimal(base_size = 14) +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    panel.background = element_rect(fill = NA),
    plot.background = element_rect(fill = NA)
  )

```

## Analysis :

The bar chart represent the number of non-motorist accidents under different weather conditions. The tallest bar is for clear weather, showing that the most non-motorist accidents happened when the weather was clear. rain, and cloudy conditions also had some non-motorist accidents but far fewer than in clear weather. fog, snow, wind, and others weather types had very low accident counts. Each bar represents the number of non-motorist accidents for each specific weather type.

## Interpretation :

The chart suggests that clear weather does not prevent accidents involving non-motorists. In fact, more of these accidents happen during clear weather, possibly because more people are outside walking or biking when the weather is nice. Bad weather like fog, snow, and wind shows fewer non-motorist crashes, which may be because fewer people are outside in those conditions. This means that while dangerous weather can affect driving, non-motorist accidents are more common when the weather is good. Drivers should still be alert for pedestrians and bicyclists even when the weather is clear.

## let's do a chi-square test :

```{r}
# Simplify to yes/no: was a non-motorist involved
combined_data$non_motorist_involved <- ifelse(!is.na(combined_data$related_non_motorist2), "Yes", "No")

weather_vs_non_motorist <- table(combined_data$weather1_clean, combined_data$non_motorist_involved)
chisq.test(weather_vs_non_motorist)

```

## Analysis :

The Chi-square test was used to check the relationship between weather conditions and non-motorist involvement in crashes. The test returned a very high Chi-square value of 19912 with 6 degrees of freedom. The p-value was less than 2.2e-16, which will help us interpret the result.

## Interpretation :

This result means there is a strong relationship between weather and whether a non-motorist was involved in an accident.(p\< 0.05)We can reject the idea that weather and non-motorist involvement are unrelated. For example, clear weather had the highest number of non-motorist accidents, likely because more people are outside. Even though accidents happen in all types of weather, this result shows the pattern is not random. Therefore, weather is an important factor to consider when studying traffic safety for non-motorists.

## Modify the name of non-motorist name

```{r}
combined_data$non_motorist_clean <- tolower(trimws(combined_data$related_non_motorist2))

combined_data$non_motorist_clean <- dplyr::recode(combined_data$non_motorist_clean,
  "pedestrian" = "PEDESTRIAN",
  "bicyclist" = "BICYCLIST",
  "cyclist (electric)" = "BICYCLIST",
  "cyclist (non-electric)" = "BICYCLIST",
  "scooter (electric)" = "SCOOTER",
  "scooter (non-electric)" = "SCOOTER",
  "wheelchair (electric)" = "WHEELCHAIR",
  "wheelchair (non-electric)" = "WHEELCHAIR",
  "machine operator/rider" = "WHEELCHAIR",
  "other" = "OTHER",
  .default = "OTHER"
)

```

### Bubble chart of non- motorist crash counts by weather condition

```{r}
# Calculate the count of non-motorist crashes per weather condition
dot_data <- combined_data %>%
  filter(!is.na(non_motorist_clean), !is.na(weather1_clean))
dot_data_summary <- dot_data %>%
  group_by(weather1_clean, non_motorist_clean) %>%
  summarise(crash_count = n()) %>%
  ungroup()

# Calculate the total number of crashes
total_crashes <- sum(dot_data_summary$crash_count)

# Calculate the proportion of non-motorist crashes per weather condition
dot_data_summary <- dot_data_summary %>%
  mutate(proportion = crash_count / total_crashes)

# Now you can use this new 'proportion' column in your ggplot code
ggplot(dot_data_summary, aes(x = weather1_clean, y = non_motorist_clean, size = proportion, fill = proportion)) +
  geom_point(alpha = 0.9, shape = 21, color = "black") + 
  scale_size_area(max_size = 18) +
  scale_fill_gradient(low = "lightyellow", high = "red") +
  labs(
    title = "Proportion of Non-Motorist Crashes by Weather Condition",
    x = "Weather Condition",
    y = "Non-Motorist Type",
    size = "Proportion",
    fill = "Proportion"
  ) +
  guides(size = "none") +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_text(face = "bold", hjust = 0.5),
    panel.background = element_rect(fill = "white", color = NA),
    plot.background = element_rect(fill = "white", color = NA),
    panel.grid = element_blank(),
    axis.line = element_blank(),
    panel.border = element_blank()
  )

```

## Analysis :

The bubble chart titled "Proportion of Non-Motorist Crashes by Weather Condition" illustrates the distribution of crashes involving various types of non-motorists such as pedestrians, bicyclists, and wheelchair users under different weather conditions. The x-axis represents weather conditions (clear, cloudy, rain), and the y-axis shows non-motorist types. Each bubble’s size and color intensity indicate the proportion of crashes: larger and redder bubbles reflect higher proportions. Notably, pedestrians involved in crashes under clear weather conditions show the largest and darkest bubble, indicating they account for the highest proportion of non-motorist crashes, especially in good weather.

## Interpretation:

This visualization suggests that clear weather is associated with the highest number of non-motorist crashes, which may be due to increased outdoor activity and road use. Pedestrians are the most vulnerable group, likely because they are more frequently present on roadways compared to other non-motorist types. The low number of crashes in poor weather like fog, snow, and wind could indicate reduced non-motorist presence or more cautious driving behaviors in such conditions. The data highlights the need for enhanced pedestrian safety measures, especially in favorable weather conditions when road use is higher. It is normal that during certain period(snow,wind,) result are fewer because people do not go out during that period.

## 4- Vehicle and Speed Limit

### let's see the type of car named

```{r}
unique(combined_data$vehicle_make)

```

## rename all the vehicle names:

```{r}
combined_data$vehicle_make <- with(combined_data, case_when(
  vehicle_make %in% c("TOYOTA", "TOYOT", "TOY0TA", "TOYORA", "TOYTOA", "TOYO", "TOYT", "TOOT", "TOYOYA", "TTOYOTA", "TOY") ~ "TOYOTA",
  vehicle_make %in% c("CHEVROLET", "CHEV", "CHEVY", "CHEVEROLET", "CHEVROLETE", "CHEVORLET", "CEV") ~ "CHEVROLET",
  vehicle_make %in% c("FORD") ~ "FORD",
  vehicle_make %in% c("DODGE", "DODG", "DODG3") ~ "DODGE",
  vehicle_make %in% c("LEXUS", "LEXU", "LEXS", "LEXSUS", "LEX", "LEXIS") ~ "LEXUS",
  vehicle_make %in% c("HONDA", "HOND", "HONDAA", "IHON") ~ "HONDA",
  vehicle_make %in% c("HYUNDAI", "HYUN", "HYUNDA", "HYUANDAI", "HUYNDAI", "HYUNDIA", "HYUND", "HYNDAI", "HYUDAI", "HYUNDI") ~ "HYUNDAI",
  vehicle_make %in% c("NISSAN", "NISS", "NISSIAN", "MISSAN", "NSSAN") ~ "NISSAN",
  TRUE ~ "OTHER"
))


```

```{r}
unique(combined_data$vehicle_make)

```

```{r}
# mean
mean_speed <- mean(combined_data$speed_limit, na.rm = TRUE)

# median
median_speed <- median(combined_data$speed_limit, na.rm = TRUE)

# minimum
min_speed <- min(combined_data$speed_limit, na.rm = TRUE)

#  maximum
max_speed <- max(combined_data$speed_limit, na.rm = TRUE)

# Print the results
cat("Mean Speed Limit: ", mean_speed, "\n")
cat("Median Speed Limit: ", median_speed, "\n")
cat("Minimum Speed Limit: ", min_speed, "\n")
cat("Maximum Speed Limit: ", max_speed, "\n")

```

## Analysis : 

The mean speed limit in the dataset is approximately 26.09 mph, and the median speed limit is 30 mph. This suggests that while many roads have typical speed limits around 30 mph, the overall average is pulled down slightly due to the presence of very low-speed zones. The minimum speed limit of 0 mph likely corresponds to specific areas like parking lots, private driveways, or non-road zones such as sidewalks or alleyways where vehicles are either prohibited or not expected to move. These areas are not meant for regular traffic flow and are exceptions in the dataset.

## I will select the top 10 car and to make my graph interactive , I get help by chatgpt. Chat gpt gave me the library to load , and ggplotly

```{r}
library(plotly)

top_makes <- combined_data %>%
  count(vehicle_make, sort = TRUE) %>%
  slice_head(n = 10) %>%
  pull(vehicle_make)

heatmap_data <- combined_data %>%
  filter(
    vehicle_make %in% top_makes,
    !is.na(speed_limit),
    !is.na(vehicle_year),
    vehicle_year <= 2025
  ) %>%
  group_by(vehicle_make, speed_limit) %>%
  summarise(
    count = n(),
    min_year = min(vehicle_year),
    max_year = max(vehicle_year),
    .groups = "drop"
  ) %>%
  group_by(vehicle_make) %>%
  mutate(
    total_make_crashes = sum(count),
    proportion = count / total_make_crashes,
    year_range = paste0("Oldest: ", min_year, " | Newest: ", max_year)
  ) %>%
  ungroup()


p <- ggplot(heatmap_data, aes(
  x = factor(speed_limit),
  y = vehicle_make,
  fill = proportion,
  text = paste("Speed Limit of the area:", speed_limit,
               "<br>Make:", vehicle_make,
               "<br>", year_range,
               "<br>Proportion of Crashes:", round(proportion, 5))
)) +
  geom_tile(color = "red") +
  scale_fill_gradient(low = "yellow", high = "red") +
  labs(
    title = "Crash Porportion by Vehicle Make and Speed Limit",
    x = "Speed Limit (MPH)",
    y = "Vehicle Make",
    fill = "Crash Proportion"
  ) +
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "white", color = NA),
    plot.background = element_rect(fill = "white", color = NA),
    legend.background = element_rect(fill = "white", color = NA),
    legend.key = element_rect(fill = "white", color = NA),
    axis.text.x = element_text(angle = 45, hjust = 1),
    plot.title = element_text(hjust = 0.5), 
    panel.grid = element_blank(),
    axis.line = element_blank()
  )
ggplotly(p, tooltip = "text")

```

## Analysis :

This chart shows how often crashes happen for different car brands at different speed limits. The x-axis shows the speed limits (from 0 to 55 mph), and the side lists car brands like Toyota, Honda, and Ford. The colors show how many crashes happened red means more crashes, and yellow means fewer. Most crashes happen at 25 to 35 mph, especially for cars like Honda, Ford, and Hyundai. These speeds are common on city streets where there is a lot of traffic and people walking around.

## Interpretation :

The crash proportions decrease at both very low (0–15 mph) and high (45–55 mph) speed limits. This could suggest that either fewer crashes happen at these speeds or that there is less driving activity in those zones. The data also reveals that certain brands like Honda and Ford have more intense crash activity in the 25–35 mph range, which may be linked to their high usage in urban areas. On the other hand, brands like Lexus or Hyundai show some gaps, possibly due to fewer recorded crashes or less representation in the dataset. Overall, this heatmap shows that crash risk is highest in moderate-speed areas, where traffic congestion and interactions between vehicles and pedestrians are more frequent.

### 5-Are there specific areas with a high concentration of crashes involved non-motorists ?

### let's see the type of non motorist we have here :

```{r}
unique(combined_data$related_non_motorist2)

```

### let's rename them to make it simple

```{r}

combined_data4 <- combined_data %>%
  mutate(
    related_non_motorist2 = recode(related_non_motorist2,
                                   "PEDESTRIAN" = "Pedestrian",
                                   "Pedestrian" = "Pedestrian",
                                   "BICYCLIST" = "Bicyclist",
                                   "Cyclist (non-electric)" = "Bicyclist",  
                                   "Cyclist (Electric)" = "Bicyclist",      
                                   "Scooter (electric)" = "Scooter",
                                   "Scooter (non-Electric)" = "Scooter",
                                   "Wheelchair (electric)" = "Wheelchair",
                                   "Wheelchair (non-electric)" = "Wheelchair",
                                   "Unknown Type Of Non-Motorist" = "Unknown",
                                   "Unknown" = "Unknown",
                                   "OTHER CONVEYANCE" = "Other",  
                                   "OTHER" = "Other",
                                   "MACHINE OPERATOR/RIDER" = "Other",  
                                   "IN ANIMAL-DRAWN VEH" = "Unknown",  
                                   "Other Pedestrian (person in a building, skater, personal conveyance, etc.)" = "Pedestrian",  
                                   "Other Pedestrian (person in a building, skater, personal conveyance, etc.), Pedestrian" = "Pedestrian",  
                                   "Other, PEDESTRIAN" = "Pedestrian",
                                   "OTHER, OTHER CONVEYANCE" = "Other",
                                   "BICYCLIST, OTHER" = "Bicyclist",
                                   "BICYCLIST, PEDESTRIAN" = "Bicyclist",
                                   "OTHER CONVEYANCE, PEDESTRIAN" = "Pedestrian",
                                   "Occupant of Motor Vehicle Not in Transport" = "Unknown", 
                                   "Occupant Of a Non-Motor Vehicle Transportation Device" = "Unknown",
                                   "Unknown, Wheelchair (electric)" = "Unknown",
                                   .default = "Other",
    )
  )

```

### What types of route do we have in this data set ? 

```{r}
unique(combined_data4$route_type2)
```

```{r}
table(combined_data4$related_non_motorist2)

```

## second attempt cleaning :

```{r}

combined_data5 <- combined_data4 %>%
  mutate(
    related_non_motorist2 = recode(related_non_motorist2,
      "Occupant of Motor Vehicle Not in Transport, Pedestrian" = "Pedestrian",
      "OTHER PEDALCYCLIST" = "Bicyclist",  
      "OTHER, PEDESTRIAN" = "Pedestrian",  
      "OTHER CONVEYANCE, PEDESTRIAN" = "Pedestrian", 
      "OTHER" = "Other", 
      "MACHINE OPERATOR/RIDER" = "Other", 
      "IN ANIMAL-DRAWN VEH" = "Unknown",  
      "Unknown Type Of Non-Motorist" = "Unknown",  
      "Unknown" = "Unknown",  
      "Scooter (electric)" = "Scooter",  
      "Scooter (non-Electric)" = "Scooter",  
      "Wheelchair (electric)" = "Wheelchair",  
      "Wheelchair (non-electric)" = "Wheelchair", 
      "Pedestrian" = "Pedestrian",  
      "BICYCLIST" = "Bicyclist",  
      "Cyclist (non-electric)" = "Bicyclist",  
      "Cyclist (Electric)" = "Bicyclist",  
      "BICYCLIST, OTHER" = "Bicyclist",  
      "BICYCLIST, PEDESTRIAN" = "Bicyclist" 
    )
  )


table(combined_data5$related_non_motorist2)

```

## Let's do the same for route_type

```{r}

combined_data6 <- combined_data5 %>%
  mutate(
    route_type2 = recode(route_type2,
                         "County" = "County",  # Keep County as it is
                         "Other Public Roadway" = "Public Roads",
                         "Maryland (State)" = "Maryland State",  
                         "US (State)" = "Maryland State",  
                         "Municipality" = "Public Roads",
                         "Ramp" = "Government", 
                         "Government" = "Government", 
                         "Interstate (State)" = "Maryland State",
                         "Service Road" = "Public Roads",
                         "Maryland (State) Route" = "Maryland State",
                         "Private Route" = "Public Roads",  
                         "County Route" = "County",  
                         "Local Route" = "County",  
                         "Municipality Route" = "Public Roads",
                         "Bicycle Route" = "Bicycle Route", 
                         "Crossover" = "Bicycle Route",  
                         "Government Route" = "Government",  
                         "Spur" = "Unknown",  
                         "Private Roads" = "Public Roads",  
                         "Special Routes" = "Public Roads")
    )

```

```{r}
unique(combined_data6$route_type2)
```

```{r}
combined_data6 <- combined_data6 %>%
  mutate(route_type2 = recode(route_type2,
                              `""` = "Unknown",  # <- Fix for empty string
                              "County" = "County",
                              "Other Public Roadway" = "Public Roads",
                              "Maryland (State)" = "Maryland State",  
                              "US (State)" = "Maryland State",  
                              "Municipality" = "Public Roads",
                              "Ramp" = "Government", 
                              "Government" = "Government", 
                              "Interstate (State)" = "Maryland State",
                              "Service Road" = "Public Roads",
                              "Maryland (State) Route" = "Maryland state",
                              "Private Route" = "Public Roads",  
                              "County Route" = "County",  
                              "Local Route" = "County",  
                              "Municipality Route" = "Public Roads",
                              "Bicycle Route" = "Bicycle Route", 
                              "Crossover" = "Bicycle Route",  
                              "Government Route" = "Government",  
                              "Spur" = "Public Roads",  
                              "Private Roads" = "Public Roads",  
                              "Special Routes" = "Public Roads"
  ))

```

### Non Motorists VS Route Type

```{r}

library(scales)
non_motorist_data <- combined_data6 %>%
  filter(!is.na(route_type2), route_type2 != "", 
         !is.na(related_non_motorist2), related_non_motorist2 != "")

route_type_counts <- non_motorist_data %>%
  count(route_type2, related_non_motorist2)

route_type_counts <- route_type_counts %>%
  group_by(route_type2) %>%
  mutate(
    total_crashes = sum(n),
    proportion = n / total_crashes
  ) %>%
  ungroup() %>%
  arrange(route_type2)

ggplot(route_type_counts, aes(
    x = proportion,
    y = factor(route_type2, levels = unique(route_type2)),
    fill = related_non_motorist2
  )) +
  geom_col(color = "white") +
  scale_x_continuous(labels = percent_format(accuracy = 1)) +
  labs(
    title = "Proportion of Non-Motorist Crash Types by Route Type",
    x = "Proportion of Crashes",
    y = "Route Type",
    fill = "Non-Motorist Type"
  ) +
  coord_cartesian(expand = FALSE) +
  theme_minimal() +
  theme(
    panel.background = element_rect(fill = "white", color = NA),
    plot.background  = element_rect(fill = "white", color = NA),
    legend.background = element_rect(fill = "white", color = NA),
    legend.key        = element_rect(fill = "white", color = NA),
    axis.text.y       = element_text(size = 10),
    axis.text.x       = element_text(size = 9),
    plot.title        = element_text(face = "bold", hjust = 0.5)
  )

```

## Analysis: 

This graph represent the porportion of crashes that non-motorists had based on route types. The x-axis represent the proportion of crashes and the y-axis, the types of route that we have here which are bicycle route , county road, government, maryland state , public roads. On bicycle routes, crashes occur most frequently with bicyclists and pedestrians, with bicyclists involved in 50% of the accidents on these roads. On county roads, pedestrians are more exposed to crashes. Government-owned roads also show a high rate of bicycle-related incidents, with 50% of crashes involving bicyclists. Finally, on both public roads and Maryland state roads, accidents mostly involve pedestrians.

## Interpretation: 

The data shows that crash risks vary depending on the type of roadway and the users involved. Bicycle routes and government-owned roads have the highest percentage of crashes involving bicyclists, each accounting for 50% of such incidents, indicating a need for better bike safety measures. In contrast, county roads, as well as public and Maryland state roads, show a greater risk for pedestrians, suggesting that pedestrian safety infrastructure such as sidewalks, crosswalks, and signals may be lacking or insufficient.

## o6- **How does the presence of alcohol or drugs affect crash severity for drivers ?**

```{r}
unique(combined_data$driver_substance_abuse2)
```

## Recode into two categories: 2 = substance use, 1 = none substance use

```{r}
combined_data$substance_use_category <- ifelse(
  combined_data$driver_substance_abuse2 %in% c(
    "ALCOHOL PRESENT", 
    "ALCOHOL CONTRIBUTED", 
    "ILLEGAL DRUG PRESENT", 
    "ILLEGAL DRUG CONTRIBUTED", 
    "COMBINED SUBSTANCE PRESENT", 
    "MEDICATION PRESENT", 
    "ALCOHOL PRESENT, NONE DETECTED", 
    "ALCOHOL CONTRIBUTED, NONE DETECTED", 
    "COMBINED SUBSTANCE PRESENT, NONE DETECTED", 
    "MEDICATION PRESENT, NONE DETECTED"
  ), 
  2,
  1)
```

## Let's take a look at the new table

```{r}
table(combined_data$substance_use_category)

head(combined_data[, c("driver_substance_abuse2", "substance_use_category")])

```

```{r}
unique(combined_data$injury_severity1)

```

### Consider 1 as a serious injury , and 0 as no injury

```{r}
combined_data$severe_injury <- ifelse(
  combined_data$injury_severity1 %in% c(
    "SUSPECTED SERIOUS INJURY", 
    "Suspected Serious Injury", 
    "POSSIBLE INJURY", 
    "Possible Injury"
  ),
  1,  
  0 
)

```

```{r}
table(combined_data$injury_severity1, combined_data$severe_injury)

```

## 2\*2 table

```{r}
table_data <- table(combined_data$substance_use_category, combined_data$severe_injury)
table_data

```

## Calculate the odds ratio:

```{r}
odds_ratio <- (8 / 80) / (148 / 5824)
odds_ratio

```

## Comments : 

Baes on the results, people who used substances (like alcohol or drugs) were more likely to be involved in an accident than those who did not. The higher the odds ratio is above 1, the stronger the association between substance use and crash involvement.

**7- Are we able to locate accidents that involve non-motorists from the map?**

```{r}
library(leaflet)

map <- leaflet(data = combined_data) %>%
  addProviderTiles("CartoDB.Positron") %>%  
  addMarkers(
    ~longitude1, ~latitude1,  
    popup = ~road_name1,      
    label = ~road_name1,      
    clusterOptions = markerClusterOptions()  
  ) %>%
  setView(lng = mean(combined_data$longitude1), lat = mean(combined_data$latitude1), zoom = 10) 


map

```

## 

## Comments : 

Based on this map, we can see that after performing the inner join, I worked with a total of 6,059 crash cases. This map helps identify the locations of these accidents and highlights the areas with the highest frequency of crashes. According to the map, places like Wheaton, Silver Spring, and Aspen Hill have a high number of accidents. This is not only due to the population density in these areas but also possibly because of heavy traffic, major intersections, and commercial activity that increase the risk of crashes.

## Conclusion : 

This project highlights the factors linked to crash risks in Montgomery County, including light conditions, weather, speed limits, vehicle types, non-motorist involvement, and substance use. Most crashes happened during clear weather, in daylight, and at moderate speed limits (25–35 mph) which are typical on busy city roads. Even though these are normal driving conditions, the high number of vehicles and pedestrians increases the chance of accidents.Pedestrians were the most affected non-motorists, especially in clear weather. Vehicles like Honda, Ford, and Hyundai showed higher crash rates, likely due to their popularity. Crashes were fewer in low-speed zones like parking lots and neighborhoods (0–15 mph) and on highways (45–55 mph). A large majority of crashes (94%) involved no injuries, showing that many incidents were minor but still important.Importantly, substance use was a contributing factor in some crashes, adding serious risk to all road users. Even a small number of drivers under the influence can cause major harm. These findings suggest that the biggest crash risks come not just from weather or road types, but from driver behavior, including speeding and substance use. To reduce accidents, Montgomery County should focus on traffic control, driver awareness programs, and stronger enforcement against impaired driving.
